suite: service defaults deployment
templates:
  - templates/services/deployment.yaml
tests:
  - it: "vector deploy defaults"
    set:
      raster.enabled: false
      stac.enabled: false
      vector.enabled: true
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: ^vector-RELEASE-NAME$
      - equal:
          path: spec.strategy.type
          value: "RollingUpdate"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: "768m"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "256m"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: "1024Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "256Mi"
      - equal:
          path: metadata.labels.gitsha
          value: "ABC123"
  - it: "raster deploy defaults"
    set:
      raster.enabled: true
      stac.enabled: false
      vector.enabled: false
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: ^raster-RELEASE-NAME$
      - equal:
          path: spec.strategy.type
          value: "RollingUpdate"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: "768m"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "256m"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: "4096Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "3072Mi"
      - equal:
          path: metadata.labels.gitsha
          value: "ABC123"
  - it: "stac deploy defaults"
    set:
      raster.enabled: false
      stac.enabled: true
      vector.enabled: false
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: ^stac-RELEASE-NAME$
      - equal:
          path: spec.strategy.type
          value: "RollingUpdate"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: "768m"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "256m"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: "1024Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "1024Mi"
      - equal:
          path: metadata.labels.gitsha
          value: "ABC123"

  - it: "serviceAccountName is set to the default when name is not provided"
    asserts:
        - isKind:
            of: Deployment
        - equal:
            path: spec.template.spec.serviceAccountName
            value: "default"

  - it: "serviceAccountName is set to the provided name"
    set:
      serviceAccount.name: "custom-service-account"
    asserts:
        - isKind:
            of: Deployment
        - equal:
            path: spec.template.spec.serviceAccountName
            value: "custom-service-account"
        
        #  I happen to know these work using templates
#   - it: "serviceAccountName is overridden at the service level"
#     set:
#       vector.enabled: true
#       vector.serviceAccountName: my-custom-sa
#     asserts:
#       - equal:
#           path: spec.template.spec.serviceAccountName
#           value: my-custom-sa
#         documentIndex: 1

#   - it: "serviceAccountName is overridden at the service level"
#     set:
#       serviceAccount.name: "default-service-account"
#       raster.enabled: true
#       raster.serviceAccountName: vector-service-account
#     asserts:
#       - equal:
#           path: spec.template.spec.serviceAccountName
#           value: vector-service-account
#         documentIndex: 1